name: toolstash-check
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Clone go on tip
      run: |
        git clone https://github.com/golang/go.git --branch master --single-branch --no-tags
        cd go
        export baseline=$(pwd)
        echo "baseline=$baseline" >> $GITHUB_ENV
        git log -1 --pretty=short

    - name: Toolstash save
      run: |
        go env -w GO111MODULE=auto
        go install golang.org/x/tools/cmd/toolstash
        toolstash -v save

    - name: Merge patch
      run: |
        if [ ! -f *.patch ]; then echo "No patch file found. Skipping."; exit 0; fi
        mv *.patch ./go/src/
        cd go/src
        git config user.email "${{ github.event.pusher.email }}"
        git config user.name "${{ github.event.pusher.name }}"
        git am --ignore-space-change --ignore-whitespace --whitespace=fix *.patch
        git show --stat -n $(ls -1 *.patch | wc -l)
        rm ./*.patch

    - name: Update compiler rules
      run: |
        cd go/src/cmd/compile/internal/ssa/gen
        go run *.go

    - name: Commit changes
      run: |
        cd go
        export COMMITTITLE=$(basename -s .patch *.patch)
        rm *.patch
        git add -A
        whoami | xargs -I {} git config user.name {}
        whoami | xargs -I {} git config user.email {}@github.com
        git commit -m ${COMMITTITLE}

    - name: Build
      run: |
        cd go/src
        export GOROOT_BOOTSTRAP=$(go env GOROOT)
        sh ./make.bash

    - name: Test
      run: |
        cd go/bin
        export GOROOT=
        go env -w GOROOT=
        go tool dist version
        go tool dist test

    - name: Toolstash -cmp
      run: |
        cd go/src
        go version
        export GOROOT=
        go env -w GO111MODULE=auto
        go tool dist version
        # go tool dist install cmd/compile
        # go build -toolexec 'toolstash -cmp' -a std

    - name: Toolstash-check
      run: |
        go get -u github.com/iwdgo/toolstash-check
        cd $GOPATH
        toolstash-check -v -repo $baseline

    - name: Toolstash-check -all
      run: |
        go get -u github.com/iwdgo/toolstash-check
        cd $GOPATH
        toolstash-check -all -v -repo $baseline
